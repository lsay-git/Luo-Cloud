<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.luo.app.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.luo.app.user.entity.User">
    <!--@mbg.generated-->
    <!--@Table luo_user-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>

  <resultMap id="LoginUserMap" type="org.luo.auth.model.LoginUser">
    <result column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="username" jdbcType="BIGINT" property="username"/>
    <result column="nickname" jdbcType="BIGINT" property="nickname"/>
    <result column="email" jdbcType="BIGINT" property="email"/>
    <result column="telephone" jdbcType="BIGINT" property="telephone"/>
    <result column="sex" jdbcType="BIGINT" property="sex"/>
    <result column="dead_status" jdbcType="BIGINT" property="deadStatus"/>
    <collection property="permissions" ofType="java.lang.String" column="user_id" select="selectRolePermission"/>
    <collection property="menus" ofType="java.lang.String" column="user_id" select="selectRolePermissionCode"/>
    <collection property="roles" ofType="org.luo.auth.model.RoleModel" column="user_id" select="selectRole"/>
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, create_user, create_time, update_user, update_time, `status`, 
    is_deleted
  </sql>

  <select id="selectUserInfo" resultMap="LoginUserMap">
    SELECT
    t1.username,
    t2.user_id,
    t2.nickname,
    t2.telephone,
    t2.email,
    t2.sex,
    t2.dead_status
    FROM luo_user t1
    INNER JOIN luo_user_info t2 ON t1.id = t2.user_id AND t2.is_deleted = 0
    WHERE
    t1.is_deleted = 0
    AND
    t1.id = #{id}
  </select>

  <select id="selectRolePermission" resultType="java.lang.String">
    SELECT
    t1.permission
    FROM luo_permission t1
    LEFT JOIN luo_role_permission t2 ON t1.id = t2.permission_id AND t2.is_deleted = 0
    LEFT JOIN luo_user_role t3 ON t2.role_id = t3.role_id AND t3.is_deleted = 0
    WHERE
    t1.is_deleted = 0
    AND
    t3.user_id = #{user_id}
  </select>

  <select id="selectRolePermissionCode" resultType="java.lang.String">
    SELECT
    DISTINCT t1.code
    FROM luo_permission t1
    LEFT JOIN luo_role_permission t2 ON t1.id = t2.permission_id AND t2.is_deleted = 0
    LEFT JOIN luo_user_role t3 ON t2.role_id = t3.role_id AND t3.is_deleted = 0
    WHERE
    t1.is_deleted = 0
    AND
    t3.user_id = #{user_id}
  </select>

  <select id="selectRole" resultType="org.luo.auth.model.RoleModel">
    SELECT
    t1.id AS roleId,
    t1.code,
    t1.name
    FROM luo_role t1
    LEFT JOIN luo_user_role t2 ON t1.id = t2.role_id AND t2.is_deleted = 0
    WHERE
    t1.is_deleted = 0
    AND
    t2.user_id = #{user_id}
  </select>

</mapper>